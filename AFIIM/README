Introduction
============
The AFIIM package includes the implementation of the Adaptive Factored Incomplete Inverse Matrix preconditioning technique in C++
programming language. The package also includes an implementation of the Explicit Preconditioned Bi-Conjugate Gradient Stabilized
iterative method based on the AFIIM scheme. Functions for reading and writing Matrix Market files are also provided.


Installation
============
Building the AFIIM software is performed by the issuing the following command on the root folder:

   make

Before issuing ``make'' command in the terminal, the full Intel environment (Intel oneAPI) should be (initially installed and then) 
sourced, i.e: source /opt/intel/oneapi/setvars.sh.

External Libraries
==================
The AFIIM package requires the following external libraries:

Intel oneAPI - This library contains optimized verions of BLAS, LAPACK and other software packages and is required by EPBiCGSTAB. The
	           library can be downloaded from https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl-download.html for
               different operating systems.


Example Programs
================
The directory example/ includes an example file on how to use the AFIIM package to solve large unsymmetric sparse linear systems.
This can be performed by navigating to the example folder and issuing the command: ./example.out sherman2.mtx sherman2_rhs1.mtx 9e-6
The example program requires 3 inputs: (1) Coefficient matrix file in Matrix Market format, (2) Right hand side vector file in 
Matrix market format, (3) Drop tolerance (\epsilon).
